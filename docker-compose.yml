version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: payment-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: payment_db
      MYSQL_USER: payment_user
      MYSQL_PASSWORD: payment_pass
    ports:
      - "3307:3306"            # host:container
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW --binlog-do-db=payment_db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -prootpass --silent"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - payment-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: payment-redis
    ports:
      - "6380:6379"            # host:container
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - payment-network
    restart: unless-stopped

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: payment-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"            # host:container
    networks:
      - payment-network
    restart: unless-stopped

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: payment-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"            # host:container (external client)
      - "29093:29092"          # host:container (internal listener for host)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # 2 listeners: internal (container-to-container) và external (host)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      # tool có sẵn trong image Confluent
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:29092 > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - payment-network
    restart: unless-stopped

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: payment-kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - payment-network
    restart: unless-stopped

  # Application
  payment-app:
    build: .
    container_name: payment-application
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8081:8080"            # host:container
    environment:
      # DB
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: payment_db
      DB_USERNAME: payment_user
      DB_PASSWORD: payment_pass

      REDIS_HOST: redis
      REDIS_PORT: 6379

        # Ép Spring override, cao hơn YAML
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: default
      JAVA_TOOL_OPTIONS: "-Dspring.redis.host=redis -Dspring.redis.port=6379"


      # Kafka (container-to-container)
      KAFKA_SERVERS: kafka:29092
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

      # Server
      SERVER_PORT: 8080

      # App
      CURRENT_SHARD: 1
    volumes:
      - app_logs:/app/logs
    networks:
      - payment-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  kafka_data:
  app_logs:

networks:
  payment-network:
    driver: bridge
